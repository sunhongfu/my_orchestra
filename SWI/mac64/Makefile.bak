# Makefile generated by imake - do not edit!
# $XConsortium: imake.c /main/90 1996/11/13 14:43:23 lehors $

#
#
#

# ====================================================================
#
#  Included macros and rules from <Imake.cf> anmake.rulesules>
#
# ====================================================================

PWD        = /Users/kevin/OxGitRepo/OxDev/OxSWI/PfileRehearsal/mac64
TOP        = /Users/kevin/oxSDK
OS_NAME    = Darwin
OS_RELEASE = 14_4_0

SHELL = /bin/sh

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Common targets found il mak makefiles
#
# ====================================================================

# --------------------------------------------------------------------
#
# Rule: "CoTargets()"s()"
#

all:: hw sim

clean::

hw::

install::

sim::

test::

# --------------------------------------------------------------------

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Beginning of included template file: "APPLE_OSX.tmpl"
#
# ====================================================================

#
# These are parameter definitions common to all users who use the
#    GCC compiler set.
#

VPATH = ..

AR   = libtool
CC   = clang
CXX  = clang++
LD   = ld

LINK = /bin/ln
MKDIR = /bin/mkdir

OX_BUILD_DIR = $(TOP)/recon/orchestra/build/vre64

STD_COMPILE_FLAGS =      $(ENV_GCC_VRE_CPPFLAGS)      $(HW_OPTIONS)      -w      $(WARNING_ERROR_FLAG)      -pthread      -ftemplate-depth=512

DEFAULT_CFLAGS =      $(STD_COMPILE_FLAGS)      $(INSURE_CFLAGS)

DEFAULT_CXXFLAGS =      $(STD_COMPILE_FLAGS)      $(INSURE_CXXFLAGS)

SO_COMPILE_FLAGS = -fpic

MULTI_THREADING_FLAG = -pthread

DEFAULT_SO_CFLAGS =      -fpic

DEFAULT_SO_CXXFLAGS =      -fpic

DEFAULT_LDFLAGS1 =      $(ENV_GCC_VRE_LDFLAGS)      $(HW_OPTIONS)

DEFAULT_LDFLAGS2 =      $(INSURE_CXXFLAGS)

DEFAULT_ARFLAGS =      -static

HW32_OPTIONS =      -m32      -msse2      -mfpmath=sse

HW64_OPTIONS =      -m64

WARNING_ERROR_FLAG =

#
# End common GCC parametefinitinitions.
#

#
# Macro which enables warnings to be treated aild erroerrors.
# This macro has to be called before any other macros in imake file!ile!
#

# --------------------------------------------------------------------
#
# Rule: "ixRules()"s()"
#

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .o

SUFFIX_CFLAGS = $(SO_CFLAGS) $(CFLAGS1) $(DEFAULT_CFLAGS) $(CFLAGS2)

SUFFIX_CXXFLAGS = $(SO_CXXFLAGS) $(CXXFLAGS1) $(DEFAULT_CXXFLAGS) \
 $(CXXFLAGS2)

.c.o:
 $(RM) ${@F}
 $(CC) -c -o ${@F} $< $(SUFFIX_CFLAGS) -UIMAKE_GCC_VRE_SUFFIXRULES

.cpp.o:
 $(RM) ${@F}
 $(CXX) -c -o ${@F} $< $(SUFFIX_CXXFLAGS) \
 -UIMAKE_GCC_VRE_SUFFIXRULES

.cxx.o:
 $(RM) ${@F}
 $(CXX) -c -o ${@F} $< $(SUFFIX_CXXFLAGS) \
 -UIMAKE_GCC_VRE_SUFFIXRULES

clean::
 -$(RM) *.o

# --------------------------------------------------------------------

# ====================================================================
#
#  End of included template file: "EPPLE_OSX.tmpl"
#
# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Local Imakefbegibegins here
#
# ====================================================================

TOOLSET = APPLE_OSX

CXXFLAGS1 =  $(CXXRECONOXFLAGS) -I$(TOP)/lx/include

LINKERFLAGS =      -L$(TOP)/recon/Orchestra/Cartesian2D/mac64      -L$(TOP)/recon/Orchestra/Gradwarp/mac64      -L$(TOP)/recon/Orchestra/Asset/mac64      -L$(TOP)/recon/Orchestra/Arc/mac64      -L$(TOP)/recon/Orchestra/Core/mac64      -L$(TOP)/recon/Orchestra/Legacy/mac64      -L$(TOP)/recon/Orchestra/Control/mac64      -L$(TOP)/recon/Orchestra/Common/mac64      -L$(TOP)/recon/Orchestra/Crucial/mac64

LIBS =      -lOrchestraCartesian2D      -lOrchestraGradwarp      -lOrchestraAsset      -lOrchestraCore      -lOrchestraCrucial      -lOrchestraLegacy      -lOrchestraControl      -lOrchestraCommon      -lOrchestraAsset      -lOrchestraArc      -L$(TOP)/recon/Hdf5/mac64 -lGEHdf5 -L$(HDF5_ROOT)/lib -lh5tools -lhdf5_cpp -lhdf5 -lz  	-L$(TOP)/recon/Dicom/mac64 -lGEDicom -L$(DCMTK_ROOT)/lib -ldcmdata -ldcmnet -loflog -lofstd  	-L$(TOP)/recon/Math/mac64 -lGEMath  	-L$(TOP)/recon/System/mac64 -lSystem -L$(HDF5_ROOT)/lib -lh5tools -lhdf5_cpp -lhdf5 -lz      $(BOOST_ROOT)/lib/libboost_date_time.a $(BOOST_ROOT)/lib/libboost_program_options.a $(BOOST_ROOT)/lib/libboost_filesystem.a $(BOOST_ROOT)/lib/libboost_serialization.a $(BOOST_ROOT)/lib/libboost_thread.a $(BOOST_ROOT)/lib/libboost_system.a      -L$(CLAPACK_ROOT)/lib -llapack -lblas -lf2c  	-L$(FFTW_LIBS) $(FFTW_LIB)      -L$(BLITZ_ROOT)/lib -lblitz      -lpthread      -lstdc++      -ldl      -framework System

VPATH = ..

RECONSYSTEMINCLUDES = \
 -I$(TOP)/recon \
 -isystem$(BOOST_ROOT)/include

VREOPTFLAGS = -O3 -mtune=generic

CXXRECONFLAGS = \
 $(VREOPTFLAGS) \
 -stdlib=libstdc++ \
 -DEXCLUDE_RSP_TYPE_DEFINES \
 -D_GE_ESE_BUILD \
 $(RECONSYSTEMINCLUDES)

ORCHESTRAINCLUDES = \
 -I$(BLITZ_INCLUDE) \
 -I$(HDF5_INCLUDE)

CXXRECONOXFLAGS = \
 $(CXXRECONFLAGS) \
 $(ORCHESTRAINCLUDES) \
 -I$(TOP)/lx/em/projects

CXXLIBFLAGS = \
 -stdlib=libstdc++ \

CXXSRCS =      CommandLine.cpp      Rehearsal.cpp      SWI.cpp

OBJS = $(CXXSRCS:.cpp=.o)

EXECUTABLE = OxPfileSWI

# --------------------------------------------------------------------
#
# Rule: "LinkUsingCxx(LINKOBJ,OBJS,LDFLAGS)"
#
#
# LINKOBJ: The name of the resultant object file this rul rule.
# It is created by linking together the s given by  by
# OBJS (see nexfinitioition).
#
# OBJS: A list of object files which are to be li togetherther.
#
# LDFLAGS1: A list of flags to be passed to $(CXXhese flags ags
# are placed before any standard flags which me definefined.
#

SO_COMPILE_FLAGS =

all $(MAKE_TARGET):: $(EXECUTABLE)

$(EXECUTABLE):  $(OBJS)
 $(RM) $@
 $(CXX) -o $@ $^ $(ORCHESTRA_EXEFLAGS)  $(CXXLIBFLAGS) $(LINKERFLAGS) $(LIBS) $(DEFAULT_LDFLAGS) \
 $(INSURE_CXXFLAGS) \
 -UIMAKE_GCC_VRE_LINKUSINGCXX

clean::
 $(RM) $(EXECUTABLE)

# --------------------------------------------------------------------

# --------------------------------------------------------------------
#
# Rule: "GeneraBitCode()"e()"
#

HW_OPTIONS = \
 $(HW64_OPTIONS) \
 -DGE_64BIT

ACE_ROOT = $(VRE64_ACE_ROOT)
ATLAS_HOME = $(TOP)/3p_osi/atlas_vre64/inst
ATLAS_LIBS = $(TOP)/3p_osi/atlas_vre64/inst/lib/vre64
CNV_HOME = $(TOP)/host/foundation-libs/CnvEndianLib/vre64
FFTW_HOME = $(TOP)/recon/3p/mac64/fftw-3.2.2_mac64
FFTW_LIBS = $(TOP)/recon/3p/mac64/fftw-3.2.2_mac64/lib
FFTW_LIB = -lfftw3f -lfftw3
MPICH2_HOME = $(MPICH2_64_HOME)

# --------------------------------------------------------------------

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  This dependency line is found in all makefiles. AKEMAKE_TARGET)
#     should be defined in the local Imakefile.
#
# ====================================================================

all $(MAKE_TARGET):: $(ALL_OBJS)

# ====================================================================

